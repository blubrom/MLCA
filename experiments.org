Experiments for validating our tool :

first, run the program, we will then be able to send it requests with
the following command:

pipenv run uvicorn boaviztapi.main:app --host=localhost --port 5000 &

this must be realised in another terminal and not in emacs because,
since it does not terminate, trying to execute it in your emacs would
make your emacs wait for the death of the process forever.


* Defining some helper functions to easily run experiments and read their results

then, we define a helper function to be able to more easily run
experiments and store their results in a more readable way
#+begin_src python :results output :exports both :session
import json
import subprocess
from datetime import datetime

def run_experiment(model, filename):
  with open("tmp.json", "w") as tmp:
    json.dump(model, tmp)
  path = "results/" + datetime.now().strftime("%d-%m-%y_%H-%M") + "_" + filename + ".json"
  with open(path, "w") as out:
    request = "curl -X 'POST' 'http://localhost:5000/v1/mlca/?verbose=true' -H 'accept: aplication/json' -H 'Content-Type: application/json' -d @tmp.json"
    results = subprocess.run(request, shell=True, check=True, capture_output=True, text=True)
    output = json.JSONDecoder().decode(results.stdout)
    impacts = output["impacts"]
    perspective = output["perspective"]
    print(f"estimated impacts: {impacts}")
    print(f"to put impacts in perspective: {perspective}")
    json.dump(output, out, indent=4, ensure_ascii=True)
    subprocess.run("rm tmp.json", shell=True)
    return output
#+end_src

#+RESULTS:

Full results are put into the results repository under a name that is
prefixed with the date-time of running the experiment.

As most of the comparisons we are able to make are refering to gwp and
dynamic energy consumption only, let us also define a helper function
to print those results.

#+begin_src python :results output :exports both :session
def print_gwp_and_energy(results):
    dynamic_energy = results["impacts"]["energy consumption"]
    dynamic_gwp = results["impacts"]["gwp"]
    print(f"energy consumption: {dynamic_energy}")
    print(f"dynamic impacts gwp: {dynamic_gwp}")
#+end_src

#+RESULTS:


* Checking that we can get the same dynamic consumption estimate as Green Algorithms

To do a first sanity check, we verifiy that we are able to reproduce
the same results as GA on the dynamic consumption part :

We choose a configuration that we know is available in both databases
(GA version 2.2 at the time of this experiment):
- 1 CPU A8-7680 (4 cores)
- 1 GPU NVIDIA GTX 1080 Ti
- 64 GB Memory

- Use time of 12h 0min
- no PUE / dynamic ratio
- carbon intensity of France is used (51.28 g CO_2 e/kWh)

for an expected result of 196.32g of CO_2 e and 3.83 kWh of dynamic
consumption (this [[http://calculator.green-algorithms.org//?runTime_hour=12&runTime_min=0&appVersion=v2.2&locationContinent=Europe&locationCountry=France&locationRegion=FR&PUEradio=Yes&PUE=1&coreType=Both&numberCPUs=4&CPUmodel=A8-7680&numberGPUs=1&GPUmodel=NVIDIA%20GTX%201080%20Ti&memory=64&platformType=localServer][link]] should in theory get you to the page with this
exact setup and results but it seems like GA is kind of broken right
now).

If we now run the experiment with our tool :
#+begin_src python :results output :exports both :session
with open("boaviztapi/data/ml_setups/test_equals_ga.json", 'r') as test_ga:
    model_ga = json.load(test_ga)
results = run_experiment(model_ga, "test_equals_ga.json")

print_gwp_and_energy(results)
#+end_src

#+RESULTS:
: estimated impacts: {'gwp': {'embodied': 0.2, 'direct': 0.196, 'total': 0.4, 'unit': 'kgCO2eq'}, 'pe': {'embodied': 3.0, 'direct': 49.3, 'total': 50.0, 'unit': 'MJ'}, 'adp': {'embodied': 3e-05, 'direct': 2.46e-07, 'total': 3e-05, 'unit': 'kgSbeq'}, 'energy consumption': {'value': 3.83, 'unit': 'kWh'}}
: to put impacts in perspective: {'relative_SNBC': {'value': 0.0002, 'unit': 'Emissions of X Person per year in the "Strat√©gie Nationale Bas Carbone (SNBC)" sustanability objectives for France'}, 'relative_PB_Climate_Change': {'value': 0.0004, 'unit': 'person in a scenario where the Planetary Boundary for Climate Change is not exceded'}, 'relative_PB_ADP': {'value': 0.001, 'unit': 'person in a scenario where the Planetary Boundary for Abiotic Ressources Deplition is not exceded'}}
: energy consumption: {'value': 3.83, 'unit': 'kWh'}
: dynamic impacts gwp: {'embodied': 0.2, 'direct': 0.196, 'total': 0.4, 'unit': 'kgCO2eq'}

we see that we indeed obtain the same results of 196g CO_2 e and 3.83
kWh of dynamic energy consumption.

* replicating the Bloom estimates from [Luccioni2021estimating]

** Gathering information about the setup
To replicate their experiments, we first need to gather some
information on the time duration and hardware setup for the training
phase.

We can see in the paper that the training phase lasted for 118 days, 5
hours and 41 mins for a total of 1,082,990 GPU hours. (table 1)

in section 4.1, we can read that training used on average 48 computing
nodes with 8 GPUs each.
Combining the real time and these information about the setup, we
obtain

#+begin_src python :results output :exports both
real_time_hours = 118*24 + 5 + 41/60
estimated_gpu_hours = real_time_hours * 48 * 8
print(estimated_gpu_hours)
#+end_src

#+RESULTS:
: 1089670.4

we obtain an estimate of the number of GPU hours of 1,089,670.4 hours
this gives us a pretty close figure to the real GPU time.

It is written in the paper that training took place on the Jean Zay
supercomputer, using [[https://buy.hpe.com/fr/fr/compute/apollo-systems/apollo-6500-system/apollo-6500-system/hpe-apollo-6500-gen10-plus-system/p/1013092236][HPE's Apollo 6500 Gen10 Plus]]. We can read on
their website that it uses AMD EPYC 7000 Series CPUs. Combining this
information with informations about the Jean Zay supercomputer on
[[http://www.idris.fr/jean-zay/cpu/jean-zay-cpu-hw.html#gpu_p13][IDRIS's website]], we can see that only the **gpu_p5**  partition uses
such CPUs. 
We can conclude that for each of the 48 used nodes, the server
configuration is :
+ 2 CPUs : AMD Milan EPYC 7543
+ 512 Go of Memory
+ 8 NVIDIA A100 SXM4 80Go

** comparing the server footprint with the PCF sheet.

   In section 4.1, it is stated that they use values provided in the
   [[https://www.hpe.com/psnow/doc/a50005151enw][HPE ProLiant DL345 Gen10 Plus PCF]], the closest server with
   information provided. In this PCF sheet, we can read that servers
   are of type rack and that the estimated Carbon Footprint is of
   2503.2 kg CO_2 e.
   If we try our tool with the server configuration used for training,
   we obtain :
   #+begin_src shell :results output :exports both
   curl -X 'POST' \
  'http://localhost:5000/v1/server/?verbose=true' \
  -H 'accept: application/json' \
  -H 'Content-Type: application/json' \
  -d '{
    "model": {
      "type": "rack"
    },
    "configuration": {
      "cpu": {
        "units": 2,
        "model": "AMD Milan EPYC 7543"
      },
      "ram": [
        {
          "units": 1,
          "capacity": 512
        }
      ]
    }
}'
   #+end_src

   #+RESULTS:
   : {"impacts":{"gwp":{"manufacture":2300.0,"use":1170.0,"unit":"kgCO2eq"},"pe":{"manufacture":29000.0,"use":39700.0,"unit":"MJ"},"adp":{"manufacture":0.17,"use":0.000198,"unit":"kgSbeq"}},"verbose":{"CPU-1":{"unit":2,"hash":"50cbc426060b04c31b0009f1fb833c7a257a8e5d130d51b4dba3f36bfb49bef2","die_size":{"input_value":null,"used_value":2.1,"status":"SET"},"model":{"input_value":"AMD Milan EPYC 7543","used_value":"AMD Milan EPYC 7543","status":"UNCHANGED"},"tdp":{"input_value":null,"used_value":65,"status":"SET"},"impacts":{"gwp":{"value":26.0,"unit":"kgCO2eq"},"pe":{"value":420.0,"unit":"MJ"},"adp":{"value":0.04,"unit":"kgSbeq"}}},"RAM-1":{"unit":1,"hash":"05f20fab521cfc551ec4d5ff4888e0ed7b1cccf43170e03f2234ec6b4c99db1c","capacity":{"input_value":512,"used_value":512,"status":"UNCHANGED"},"density":{"input_value":null,"used_value":0.625,"status":"SET"},"impacts":{"gwp":{"value":1800.0,"unit":"kgCO2eq"},"pe":{"value":22000.0,"unit":"MJ"},"adp":{"value":0.053,"unit":"kgSbeq"}}},"CASE-1":{"unit":1,"hash":"083dcd17f9997756af73de7c61f0cf2986b25075ad00bbf7c07e08cc80a2183f","case_type":{"input_value":"rack","used_value":"rack","status":"UNCHANGED"},"impacts":{"gwp":{"value":150.0,"unit":"kgCO2eq"},"pe":{"value":2200.0,"unit":"MJ"},"adp":{"value":0.0202,"unit":"kgSbeq"}}},"MOTHERBOARD-1":{"unit":1,"hash":"3a31a8fbd4b871719831ef11af93eefbb1c2afc0f62d850a31fb5475aac9336e","impacts":{"gwp":{"value":66.1,"unit":"kgCO2eq"},"pe":{"value":836.0,"unit":"MJ"},"adp":{"value":0.00369,"unit":"kgSbeq"}}},"ASSEMBLY-1":{"unit":1,"hash":"8bfe70a2b59691c050865455cc9cf1b561ec702e7cf930c1026a490964bbd364","impacts":{"gwp":{"value":6.68,"unit":"kgCO2eq"},"pe":{"value":68.6,"unit":"MJ"},"adp":{"value":1.41e-06,"unit":"kgSbeq"}}},"SSD-1":{"unit":1,"hash":"cb269039943b145f924c394acd2f665c10b23bddf954428af81bd8eccaff3d6a","capacity":{"input_value":null,"used_value":1000,"status":"SET"},"density":{"input_value":null,"used_value":48.5,"status":"SET"},"impacts":{"gwp":{"value":52.0,"unit":"kgCO2eq"},"pe":{"value":640.0,"unit":"MJ"},"adp":{"value":0.0019,"unit":"kgSbeq"}}},"POWER_SUPPLY-1":{"unit":2,"hash":"be84aabaaac41126e1bd93ec3c10b355c6c7534cf9e3d7337cef9d6d0bb116c6","unit_weight":{"input_value":null,"used_value":2.99,"status":"SET"},"impacts":{"gwp":{"value":145.32,"unit":"kgCO2eq"},"pe":{"value":2100.0,"unit":"MJ"},"adp":{"value":0.0496,"unit":"kgSbeq"}}},"USAGE-1":{"unit":1,"hash":0,"years_use_time":{"input_value":null,"used_value":1,"status":"SET"},"hours_electrical_consumption":{"input_value":null,"used_value":0.35175,"status":"SET"},"usage_location":{"input_value":null,"used_value":"EEE","status":"SET"},"gwp_factor":{"input_value":null,"used_value":0.38,"status":"SET"},"pe_factor":{"input_value":null,"used_value":12.874,"status":"SET"},"adp_factor":{"input_value":null,"used_value":6.42e-08,"status":"SET"},"max_power":{"input_value":null,"used_value":510,"status":"SET"},"workload":{"100":{"time":{"input_value":null,"used_value":0.15,"status":"SET"},"power":{"input_value":null,"used_value":1.0,"status":"SET"}},"50":{"time":{"input_value":null,"used_value":0.5499999999999999,"status":"SET"},"power":{"input_value":null,"used_value":0.7235294117647059,"status":"SET"}},"10":{"time":{"input_value":null,"used_value":0.19999999999999998,"status":"SET"},"power":{"input_value":null,"used_value":0.5117647058823529,"status":"SET"}},"idle":{"time":{"input_value":null,"used_value":0.09999999999999999,"status":"SET"},"power":{"input_value":null,"used_value":0.3941176470588235,"status":"SET"}},"off":{"time":{"input_value":null,"used_value":0.0,"status":"SET"},"power":{"input_value":null,"used_value":0.0,"status":"SET"}}},"impacts":{"gwp":{"value":1170.0,"unit":"kgCO2eq"},"pe":{"value":39700.0,"unit":"MJ"},"adp":{"value":0.000198,"unit":"kgSbeq"}}}}}

we can see manufacture impacts of 2300 kg CO_2 e. This impact is close
to the 2500 kgCO_2 e provided on the PCF sheet and is mainly impacted
by the quantity of memory used, as it accounts for 1800 kg CO_2 e.

** comparing the GPU footprint with the chosen value

In section 4.1, it is stated that a value of 150 kg CO_2 e is
chosen. Taking a look at the source, there is no real justification
given for that value. Given that in [Loubet2023life] a small GPUs
manufacture is estimated at emiting around 30 kg CO_2 e, we can
hypothesize that GPU manufacture impacts would be in the order of 50
to 150 kg CO_2 e.

#+begin_src shell :results output :exports both
curl -X 'POST' \
  'http://localhost:5000/v1/component/gpu?verbose=true' \
  -H 'accept: application/json' \
  -H 'Content-Type: application/json' \
  -d '{
  "model": "NVIDIA A100 SXM4 80 GB"
}'
#+end_src

#+RESULTS:
: {"impacts":{"gwp":{"manufacture":300.0,"use":"not implemented","unit":"kgCO2eq"},"pe":{"manufacture":4000.0,"use":"not implemented","unit":"MJ"},"adp":{"manufacture":0.03,"use":"not implemented","unit":"kgSbeq"}},"verbose":{"units":1,"die_size":{"input_value":null,"used_value":8.26,"status":"SET"},"model":{"input_value":"NVIDIA A100 SXM4 80 GB","used_value":"NVIDIA A100 SXM4 80 GB","status":"UNCHANGED"},"tdp":{"input_value":null,"used_value":400,"status":"SET"},"memory_size":{"input_value":null,"used_value":80,"status":"SET"},"memory":{"capacity":{"input_value":null,"used_value":80,"status":"SET"},"density":{"input_value":null,"used_value":0.625,"status":"SET"},"impacts":{"gwp":{"value":290.0,"unit":"kgCO2eq"},"pe":{"value":3600.0,"unit":"MJ"},"adp":{"value":0.0098,"unit":"kgSbeq"}}},"impacts":{"gwp":{"value":300.0,"unit":"kgCO2eq"},"pe":{"value":4000.0,"unit":"MJ"},"adp":{"value":0.03,"unit":"kgSbeq"}}}}
"verbose":{"units":1,"die_size":{"input_value":null,"used_value":8.26,"status":"SET"},"model":{"input_value":"NVIDIA
A100 SXM4 80 GB","used_value":"NVIDIA A100 SXM4 80
GB","status":"UNCHANGED"},
"tdp":{"input_value":null,"used_value":400,"status":"SET"},"memory_size":{"input_value":null,"used_value":80,"status":"SET"},
"memory":{"capacity":{"input_value":null,"used_value":80,"status":"SET"},"density":{"input_value":null,"used_value":0.625,"status":"SET"},"impacts":{"gwp":{"value":290.0,"unit":"kgCO2eq"},"pe":{"value":3600.0,"unit":"MJ"},"adp":{"value":0.0098,"unit":"kgSbeq"}}},"impacts":{"gwp":{"value":300.0,"unit":"kgCO2eq"},"pe":{"value":4000.0,"unit":"MJ"},"adp":{"value":0.03,"unit":"kgSbeq"}}}}

For the specific model used, the "NVIDIA A100 SMX4 80GB", we can see
a manufacture impact of 300 kgCO_2 e. this impact is mainly influenced
by the quantity of memory on the GPU with 290 kg CO_2 e.
These are preliminary results since the base value for gpu impacts is
not proporly set yet.

** Estimating the total impacts

with all of the previous information, we can run the estimation

#+begin_src python :results output :exports both :session
with open("boaviztapi/data/ml_setups/test_bloom.json",'r') as bloom:
    bloom_model = json.load(bloom)
out = run_experiment(bloom_model,"bloom")
embodied = out["verbose"]["embodied impacts"]["gwp"]
dynamic = out["verbose"]["dynamic impacts"]["gwp"]
print(f"embodied impacts gwp: {embodied}")
print(f"dynamic impacts gwp: {dynamic}")
#+end_src

#+RESULTS:
: estimated impacts: {'gwp': {'embodied': 10000.0, 'direct': 83100.0, 'total': 100000.0, 'unit': 'kgCO2eq'}, 'pe': {'embodied': 200000.0, 'direct': 18300000.0, 'total': 20000000.0, 'unit': 'MJ'}, 'adp': {'embodied': 1.0, 'direct': 0.0788, 'total': 1.0, 'unit': 'kgSbeq'}, 'energy consumption': {'value': 523000.0, 'unit': 'kWh'}}
: to put impacts in perspective: {'relative_SNBC': {'value': 50.0, 'unit': 'Emissions of X Person per year in the "Strat√©gie Nationale Bas Carbone (SNBC)" sustanability objectives for France'}, 'relative_PB_Climate_Change': {'value': 100.0, 'unit': 'person in a scenario where the Planetary Boundary for Climate Change is not exceded'}, 'relative_PB_ADP': {'value': 40.0, 'unit': 'person in a scenario where the Planetary Boundary for Abiotic Ressources Deplition is not exceded'}}
: embodied impacts gwp: {'server': 7000.0, 'gpus': 8000.0, 'unit': 'kgCO2eq'}
: dynamic impacts gwp: {'value': 26800.0, 'gpus': 22400.0, 'ram': 1350.0, 'cpus': 3140.0, 'unit': 'kgCO2eq'}

we can see in the results (full result in results/datetime bloom.json) that we obtain close figures to those in the
paper.
with embodied impacts of 7T CO_2 e for the servers and 8T for the
GPUs to compare with the 7.6T for the servers and 3.6 T for the GPUs
in the paper. Most of the difference is due to estimated impacts of
300 kgCO_2 e for one GPU while it was estimated to 125 kgCO_2 e in the
paper.

For the dynamic consumption, we obtain an estimate of 26.8T CO_2 e,
mainly due to the GPUs (accountable for 25T, the only difference with
the figure obtained in the paper being the slightly off conversion
from real time to GPU hours) while the memory, not accounted for in
the paper brings another 1.5T CO_2 e.

The only thing that differs greatly is the value for the idle
consumption. (not so surprising since figures differ quite a lot).

* replicating results from [Bannour2021evaluating]

** detailling the Hardware configurations
the facility setup is the [[https://doc.lab-ia.fr/][LaBia]]. We can see that the only nodes using a
20 core CPU are: n[101-102]:

-  2 x Intel Xeon Gold 6148 20 cores / 40 threads @ 2.4 GHz (Skylake)
-  384 GiB of RAM
-  4 x NVIDIA Tesla V100 with 32 GiB of RAM (NVLink)

using 32 GB of RAM and not the full 384.

while the lab server is using one GTX 1080 Ti with 11GB of memory.
it is a Dell PowerEdge R730 with 2 GTW 1080 Ti, 2 Intel Xeon E5-2620
v4 CPU and 125 GB memory (only 11 of whihch are requested).

while we do not have the Intel Xeon Gold 6148 in our CPU database, we
can see on [[https://www.intel.fr/content/www/fr/fr/products/sku/120489/intel-xeon-gold-6148-processor-27-5m-cache-2-40-ghz/specifications.html][Intel's website]] that it has a TDP of 150W, was realeased in
2017 with a process of 14nm with the Skylake architecture, this is
sufficient information to add one entry to our database, knowing the
information about the Skylake architecture from [[https://en.wikichip.org/wiki/intel/microarchitectures/skylake_(server)][WikiChips]]. 

** Problems with the provided data

*** incoherences between tables 3 and 4
les r√©sultats affich√©s dans le papier ne sont pas coh√©rent d'un
tableau √† l'autre. Si on essaie de passer des valeurs de consommation
d'√©nergie (pour GA au moins) avec le facteur d'intensit√© carbone
indiqu√©, on ne retombe pas du tout sur les √©missions de carbone
indiqu√©es.

Par exemple : pour French Press, server: il est indiqu√© 1.38 kWh et
dans la section 4.2 il est indiqu√© 39 gCO_2 e/kWh comme intensit√©
carbone utilis√©e.
#+begin_src python :results output :exports both
print(39*1.38)
#+end_src

#+RESULTS:
: 53.81999999999999

on obtient 53.8g alors que dans la table 3, il est indiqu√© 350g pour
cette m√™me exp√©rience.

*** Not being able to find the same energy consumption using the same formula

An NVIDIA Tesla V100 as a TDP of 250W, therefore, if used for 2 hours,
we would expect an energy consumption of 500Wh 

However, in the paper, this consumption is estimated at a little more
than 1kWh + 32*.37W * 2 = 23Wh for the memory

#+begin_src python :results output :exports both
print(32*.37)
print((500 + 11.84) * 118/60) 
#+end_src

#+RESULTS:
: 11.84
: 1006.6186666666666

We can see that If we were to assume the usage of two GPUs, we would
obtain an estimate of 1.006 kWh, that is close to the 1.03kWh
estimated for French Press on the Facility but not exactly the same
value.
This is the closest explaination of the results I am able to formulate
while still not being exact

** experiments

#+begin_src shell :results output :exports both
curl -X 'POST' \
  'http://localhost:5000/v1/mlca/?verbose=true' \
  -H 'accept: application/json' \
  -H 'Content-Type: application/json' \
  -d '{
  "server": {
    "configuration": {
      "cpu": {
        "units": 2,
        "model": "Xeon Gold 6148"
      },
      "ram": [
        {
          "units": 1,
          "capacity": 32
        }
      ]
    }
  },
  "gpu": [
    {
      "units": 4,
      "model": "NVIDIA Tesla V100 PCIe 32 GB"
    }
  ],
  "psf": 1,
  "nb_nodes": 1,
  "cpu_usage_ratio": 0,
  "usage": {
    "minute_use_time": 118.04,
    "usage_location": "FRA",
    "gwp_factor": 39E-3
  }
}'
#+end_src

#+RESULTS:
: {"impacts":{"gwp":{"embodied":0.05,"direct":0.312,"total":0.4,"unit":"kgCO2eq"},"pe":{"embodied":0.7,"direct":90.2,"total":90.0,"unit":"MJ"},"adp":{"embodied":1e-05,"direct":3.88e-07,"total":1e-05,"unit":"kgSbeq"},"energy consumption":{"value":2.58,"unit":"kWh"}},"perspective":{"relative_SNBC":{"value":0.0002,"unit":"Emissions of X Person per year in the \"Strat√©gie Nationale Bas Carbone (SNBC)\" sustanability objectives for France"},"relative_PB_Climate_Change":{"value":0.0004,"unit":"person in a scenario where the Planetary Boundary for Climate Change is not exceded"},"relative_PB_ADP":{"value":0.0003,"unit":"person in a scenario where the Planetary Boundary for Abiotic Ressources Deplition is not exceded"}},"verbose":{"nb_nodes":{"input_value":1,"used_value":1,"status":"UNCHANGED"},"psf":{"input_value":1.0,"used_value":1.0,"status":"UNCHANGED"},"cpu_usage":{"input_value":1,"used_value":1,"status":"UNCHANGED"},"gpu_usage":{"input_value":1,"used_value":1,"status":"UNCHANGED"},"average_usage":{"input_value":null,"used_value":0.85,"status":"SET"},"hardware_replacement_rate":{"input_value":null,"used_value":6,"status":"SET"},"usage":{"years_use_time":{"input_value":null,"used_value":0,"status":"SET"},"hours_electrical_consumption":{"input_value":null,"used_value":1.31192,"status":"SET"},"usage_location":{"input_value":"FRA","used_value":"FRA","status":"UNCHANGED"},"gwp_factor":{"input_value":0.039,"used_value":0.039,"status":"UNCHANGED"},"pe_factor":{"input_value":null,"used_value":11.289,"status":"SET"},"adp_factor":{"input_value":null,"used_value":4.86e-08,"status":"SET"},"dynamic_ratio":{"input_value":null,"used_value":3.0969267139479904,"status":"SET"},"minute_use_time":{"input_value":118.04,"used_value":118.04,"status":"UNCHANGED"},"dynamic_impact_gwp":{"input_value":null,"used_value":[0.10065837392,3],"status":"SET"},"dynamic_impact_adp":{"input_value":null,"used_value":[1.25435819808e-07,3],"status":"SET"},"dynamic_impact_pe":{"input_value":null,"used_value":[29.13672777392,3],"status":"SET"},"impacts":{"gwp":{"value":0.312,"unit":"kgCO2eq"},"pe":{"value":90.2,"unit":"MJ"},"adp":{"value":3.88e-07,"unit":"kgSbeq"}}},"embodied impacts":{"gwp":{"server":0.026,"gpus":0.03,"unit":"kgCO2eq"},"pe":{"server":0.35,"gpus":0.3,"unit":"MJ"},"adp":{"server":5.3e-06,"gpus":4e-06,"unit":"kgSbeq"}},"dynamic impacts":{"gwp":{"value":0.101,"gpus":0.0767,"ram":0.000915,"cpus":0.023,"unit":"kgCO2eq"},"pe":{"value":29.1,"gpus":22.2,"ram":0.265,"cpus":6.66,"unit":"MJ"},"adp":{"value":1.25e-07,"gpus":9.56e-08,"ram":1.14e-09,"cpus":2.87e-08,"unit":"kgSbeq"}},"manufacture of one server node":{"CPU-1":{"unit":2,"hash":"e9fb3b5d6c10d5704f77b5ceb8b83db4da55d51793389f5c5d1ac968decb6146","die_size":{"input_value":null,"used_value":6.94,"status":"SET"},"model":{"input_value":"Xeon Gold 6148","used_value":"Xeon Gold 6148","status":"UNCHANGED"},"tdp":{"input_value":null,"used_value":150,"status":"SET"},"impacts":{"gwp":{"value":45.6,"unit":"kgCO2eq"},"pe":{"value":680.0,"unit":"MJ"},"adp":{"value":0.04,"unit":"kgSbeq"}}},"RAM-1":{"unit":1,"hash":"a34b138e4ee0b4c832576fe84c3ef50c4e9713ab83fe8269fdc4dbacfd382efb","capacity":{"input_value":32,"used_value":32,"status":"UNCHANGED"},"density":{"input_value":null,"used_value":0.625,"status":"SET"},"impacts":{"gwp":{"value":120.0,"unit":"kgCO2eq"},"pe":{"value":1500.0,"unit":"MJ"},"adp":{"value":0.0049,"unit":"kgSbeq"}}},"MOTHERBOARD-1":{"unit":1,"hash":"3a31a8fbd4b871719831ef11af93eefbb1c2afc0f62d850a31fb5475aac9336e","impacts":{"gwp":{"value":66.1,"unit":"kgCO2eq"},"pe":{"value":836.0,"unit":"MJ"},"adp":{"value":0.00369,"unit":"kgSbeq"}}},"ASSEMBLY-1":{"unit":1,"hash":"8bfe70a2b59691c050865455cc9cf1b561ec702e7cf930c1026a490964bbd364","impacts":{"gwp":{"value":6.68,"unit":"kgCO2eq"},"pe":{"value":68.6,"unit":"MJ"},"adp":{"value":1.41e-06,"unit":"kgSbeq"}}},"SSD-1":{"unit":1,"hash":"cb269039943b145f924c394acd2f665c10b23bddf954428af81bd8eccaff3d6a","capacity":{"input_value":null,"used_value":1000,"status":"SET"},"density":{"input_value":null,"used_value":48.5,"status":"SET"},"impacts":{"gwp":{"value":52.0,"unit":"kgCO2eq"},"pe":{"value":640.0,"unit":"MJ"},"adp":{"value":0.0019,"unit":"kgSbeq"}}},"POWER_SUPPLY-1":{"unit":2,"hash":"be84aabaaac41126e1bd93ec3c10b355c6c7534cf9e3d7337cef9d6d0bb116c6","unit_weight":{"input_value":null,"used_value":2.99,"status":"SET"},"impacts":{"gwp":{"value":145.32,"unit":"kgCO2eq"},"pe":{"value":2100.0,"unit":"MJ"},"adp":{"value":0.0496,"unit":"kgSbeq"}}},"CASE-1":{"unit":1,"hash":"d510a031d97870b128df7e34c32ed8264c7ac8f1786f012cce7f6dbf2a6ffebf","case_type":{"input_value":null,"used_value":"rack","status":"SET"},"impacts":{"gwp":{"value":150.0,"unit":"kgCO2eq"},"pe":{"value":2200.0,"unit":"MJ"},"adp":{"value":0.0202,"unit":"kgSbeq"}}}},"manufacture of one gpu":{"die_size":{"input_value":null,"used_value":8.15,"status":"SET"},"model":{"input_value":"NVIDIA Tesla V100 PCIe 32 GB","used_value":"NVIDIA Tesla V100 PCIe 32 GB","status":"UNCHANGED"},"tdp":{"input_value":null,"used_value":250,"status":"SET"},"memory_size":{"input_value":null,"used_value":32,"status":"SET"},"memory":{"capacity":{"input_value":null,"used_value":32,"status":"SET"},"density":{"input_value":null,"used_value":0.625,"status":"SET"},"impacts":{"gwp":{"value":120.0,"unit":"kgCO2eq"},"pe":{"value":1500.0,"unit":"MJ"},"adp":{"value":0.0049,"unit":"kgSbeq"}}},"impacts":{"gwp":{"value":100.0,"unit":"kgCO2eq"},"pe":{"value":2000.0,"unit":"MJ"},"adp":{"value":0.03,"unit":"kgSbeq"}}}}}

: #+RESULTS:{"impacts":{"gwp":{"embodied":0.05,"direct":0.24,"total":0.3,"unit":"kgCO2eq"},"pe":{"embodied":0.7,"direct":69.6,"total":70.0,"unit":"MJ"},"adp":{"embodied":1e-05,"direct":3e-07,"total":1e-05,"unit":"kgSbeq"},"energy consumption":{"value":1.99,"unit":"kWh"}},"perspective":{"relative_SNBC":{"value":0.0001,"unit":"Emissions of X Person per year in the \"Strat√©gie Nationale Bas Carbone (SNBC)\" sustanability objectives for France"},"relative_PB_Climate_Change":{"value":0.0003,"unit":"person in a scenario where the Planetary Boundary for Climate Change is not exceded"},"relative_PB_ADP":{"value":0.0003,"unit":"person in a scenario where the Planetary Boundary for Abiotic Ressources Deplition is not exceded"}},"verbose":{"usage":{"years_use_time":{"input_value":null,"used_value":0,"status":"SET"},"hours_electrical_consumption":{"input_value":null,"used_value":1.01192,"status":"SET"},"usage_location":{"input_value":"FRA","used_value":"FRA","status":"UNCHANGED"},"gwp_factor":{"input_value":0.039,"used_value":0.039,"status":"UNCHANGED"},"pe_factor":{"input_value":null,"used_value":11.289,"status":"SET"},"adp_factor":{"input_value":null,"used_value":4.86e-08,"status":"SET"},"dynamic_ratio":{"input_value":null,"used_value":3.0969267139479904,"status":"SET"},"minute_use_time":{"input_value":118.04,"used_value":118.04,"status":"UNCHANGED"},"dynamic_impact_gwp":{"input_value":null,"used_value":[0.07764057392,3],"status":"SET"},"dynamic_impact_adp":{"input_value":null,"used_value":[9.6752099808e-08,3],"status":"SET"},"dynamic_impact_pe":{"input_value":null,"used_value":[22.47395997392,3],"status":"SET"},"impacts":{"gwp":{"value":0.24,"unit":"kgCO2eq"},"pe":{"value":69.6,"unit":"MJ"},"adp":{"value":3e-07,"unit":"kgSbeq"}}},"embodied impacts":{"gwp":{"server":0.026,"gpus":0.03,"unit":"kgCO2eq"},"pe":{"server":0.35,"gpus":0.3,"unit":"MJ"},"adp":{"server":5.3e-06,"gpus":4e-06,"unit":"kgSbeq"}},"dynamic impacts":{"gwp":{"value":0.0776,"gpus":0.0767,"ram":0.000915,"cpus":0.0,"unit":"kgCO2eq"},"pe":{"value":22.5,"gpus":22.2,"ram":0.265,"cpus":0.0,"unit":"MJ"},"adp":{"value":9.68e-08,"gpus":9.56e-08,"ram":1.14e-09,"cpus":0.0,"unit":"kgSbeq"}},"manufacture of one server node":{"CPU-1":{"unit":2,"hash":"e9fb3b5d6c10d5704f77b5ceb8b83db4da55d51793389f5c5d1ac968decb6146","die_size":{"input_value":null,"used_value":6.94,"status":"SET"},"model":{"input_value":"Xeon Gold 6148","used_value":"Xeon Gold 6148","status":"UNCHANGED"},"tdp":{"input_value":null,"used_value":150,"status":"SET"},"impacts":{"gwp":{"value":45.6,"unit":"kgCO2eq"},"pe":{"value":680.0,"unit":"MJ"},"adp":{"value":0.04,"unit":"kgSbeq"}}},"RAM-1":{"unit":1,"hash":"a34b138e4ee0b4c832576fe84c3ef50c4e9713ab83fe8269fdc4dbacfd382efb","capacity":{"input_value":32,"used_value":32,"status":"UNCHANGED"},"density":{"input_value":null,"used_value":0.625,"status":"SET"},"impacts":{"gwp":{"value":120.0,"unit":"kgCO2eq"},"pe":{"value":1500.0,"unit":"MJ"},"adp":{"value":0.0049,"unit":"kgSbeq"}}},"MOTHERBOARD-1":{"unit":1,"hash":"3a31a8fbd4b871719831ef11af93eefbb1c2afc0f62d850a31fb5475aac9336e","impacts":{"gwp":{"value":66.1,"unit":"kgCO2eq"},"pe":{"value":836.0,"unit":"MJ"},"adp":{"value":0.00369,"unit":"kgSbeq"}}},"ASSEMBLY-1":{"unit":1,"hash":"8bfe70a2b59691c050865455cc9cf1b561ec702e7cf930c1026a490964bbd364","impacts":{"gwp":{"value":6.68,"unit":"kgCO2eq"},"pe":{"value":68.6,"unit":"MJ"},"adp":{"value":1.41e-06,"unit":"kgSbeq"}}},"SSD-1":{"unit":1,"hash":"cb269039943b145f924c394acd2f665c10b23bddf954428af81bd8eccaff3d6a","capacity":{"input_value":null,"used_value":1000,"status":"SET"},"density":{"input_value":null,"used_value":48.5,"status":"SET"},"impacts":{"gwp":{"value":52.0,"unit":"kgCO2eq"},"pe":{"value":640.0,"unit":"MJ"},"adp":{"value":0.0019,"unit":"kgSbeq"}}},"POWER_SUPPLY-1":{"unit":2,"hash":"be84aabaaac41126e1bd93ec3c10b355c6c7534cf9e3d7337cef9d6d0bb116c6","unit_weight":{"input_value":null,"used_value":2.99,"status":"SET"},"impacts":{"gwp":{"value":145.32,"unit":"kgCO2eq"},"pe":{"value":2100.0,"unit":"MJ"},"adp":{"value":0.0496,"unit":"kgSbeq"}}},"CASE-1":{"unit":1,"hash":"d510a031d97870b128df7e34c32ed8264c7ac8f1786f012cce7f6dbf2a6ffebf","case_type":{"input_value":null,"used_value":"rack","status":"SET"},"impacts":{"gwp":{"value":150.0,"unit":"kgCO2eq"},"pe":{"value":2200.0,"unit":"MJ"},"adp":{"value":0.0202,"unit":"kgSbeq"}}}},"manufacture of one gpu":{"die_size":{"input_value":null,"used_value":8.15,"status":"SET"},"model":{"input_value":"NVIDIA Tesla V100 PCIe 32 GB","used_value":"NVIDIA Tesla V100 PCIe 32 GB","status":"UNCHANGED"},"tdp":{"input_value":null,"used_value":250,"status":"SET"},"memory_size":{"input_value":null,"used_value":32,"status":"SET"},"memory":{"capacity":{"input_value":null,"used_value":32,"status":"SET"},"density":{"input_value":null,"used_value":0.625,"status":"SET"},"impacts":{"gwp":{"value":120.0,"unit":"kgCO2eq"},"pe":{"value":1500.0,"unit":"MJ"},"adp":{"value":0.0049,"unit":"kgSbeq"}}},"impacts":{"gwp":{"value":100.0,"unit":"kgCO2eq"},"pe":{"value":2000.0,"unit":"MJ"},"adp":{"value":0.03,"unit":"kgSbeq"}}}}}



* replicating results from [Dinarelli2022toward]

First, let us define a prototype ml setup. We will use it to define
the different hardware configurations. This will help us easily run
the different experiments to reconstruct the results from the
different tables.

  #+begin_src python :results both :exports both :session
model = {
"server": {},
"gpu": [],
"psf": 1,
"nb_nodes": 1,
"cpu_usage_ratio": 0,
"gpu_usage_ratio": 1,
"usage": {
  "dynamic_ratio": 1,
  "hours_use_time": 0,
  "minute_use_time": 118.04,
  "usage_location": "FRA",
  "gwp_factor": 51E-3
}
}
  #+end_src

  #+RESULTS:



** Trying to find information about the hardware setup

The authors gave us some insight on the hardware used for running
their experiments.

#+begin_quote
En tout cas, pour essayer de te donner les info dont tu as besoin, apr√®s si c'est pas √ßa, ou si tu as besoin d'autres informations, n'h√©site pas √† demander :
"CPU : nombre de coeurs utilis√©s, mod√®le" => je ne sais pas combien de coeur CPU sont utilis√© par les mod√®les wav2vec que j'ai utilis√©, mes mod√®les SLU en utilise un seul.
"GPU : nombre utilis√©s et mod√®les, m√©moire utilis√©e" (je pr√©sume que
tu voulais √©crire "nombre de coeur utilis√©s") => 
4 GPU pendant 100 heures pour fine-tuner le mod√®le wav2vec (seulement pour les exp√©riences o√π il est fine-tun√© √©videmment), 1 seule GPU pour mes mod√®les SLU.

Pour la taille des mod√®les :
environ 308 millions de param√®tres pour le mod√®le wav2vec2
environ 12 millions de param√®tres pour le mod√®le SLU

Pour la m√©moire utilis√©e, on est √† environ 80GB de m√©moire centrale (RAM de la CPU) et environ 8GB de m√©moire GPU pour les entra√Ænements des mes mod√®les SLU.
Pour le fine-tuning des mod√®les wav2vec je ne sais pas, je n'ai jamais regard√© pendant l'apprentissage de ces mod√®les, je sais que √ßa passe pas sur les GPU √† 24GB du LIG, du coup j'ai d√ª le faire sur JZ sur la partition de GPU √† 32 GB.
Je pr√©sume que la plupart des GPU (4 GPU √† 32GB pour rappel) est utilis√© par le mod√®le et les gradients des param√®tres, puisque l'apprentissage des mod√®les SLU sur les m√™mes donn√©es passe sur des GPU √† 12GB du LIG.

Alors, sur JZ j'utilise les Tesla V100-SXM2-32GB .
Au LIG, pour les mod√®les SLU, j'utilise principalement des NVIDIA GTX 1080 Ti 12Go ou des NVIDIA RTX 2080 Ti 11Go.
Il m'est arriv√© d'utiliser parfois des NVIDIA TITAN X (Pascal) 12Go et des NVIDIA Quadro RTX 6000 24Go.

En fait au LIG c'est OAR qui g√®re les job, du coup ce n'est pas facile de monitorer exactement o√π le job est ex√©cut√©.
Je sais que si je lance sur une machine donn√©, ce que je fais parce
que OAR par d√©faut te met sur la premi√®re disponible et du coup tout
le monde se retrouve sur les m√™mes machines, il y a telle ou telle
GPU, mais l√† je ne me rappelle pas dans quelle mesure je lance plus
sur une machine que sur une autre. √Ä priori c'est 90%-95% du temps sur
des NVIDIA GTX 1080 Ti 12Go ou des NVIDIA RTX 2080 Ti 11Go en mesure
√©gale.
#+end_quote

*** Hardware for the fine-tuning 
They said that a node from the Jean Zay supercomputer with 4 GPUs with
32GB memory was used for the fine tuning of the wave2vec model. if we look at the [[http://www.idris.fr/jean-zay/cpu/jean-zay-cpu-hw.html#gpu_p13][Idris' website]] we
think that the nodes used were from the *v100-32g*, it is the only node
with matching requirements in terms of number of GPU and memory per
GPU.

these nodes have the following hardware configuration :
        +  2 Intel Cascade Lake 6248 (20 cores at 2,5 GHz)
        +  192 GB de memory per node
        +  4 GPU Nvidia Tesla V100 SXM2 32 GB

Because we do not have the Intel Cascade Lake 6248 in our database, we
need to find some information about it. We can see on [[https://www.intel.fr/content/www/fr/fr/products/sku/192446/intel-xeon-gold-6248-processor-27-5m-cache-2-50-ghz/specifications.html][Intel's webpage]]
that it is a processor of the Cascade Lake architecture. On [[https://en.wikichip.org/wiki/intel/microarchitectures/cascade_lake#LCC_SoC][Wikichip]],
we can see that Cascade Lake Processors use dies largely similar to
those of the [[https://en.wikichip.org/wiki/intel/microarchitectures/skylake_(server)#Core][Skylake cores]]. Combining all of these pieces of
information, we can get an estimation of the details of an Intel
Cascade Lage 6248 :
model: "Xeon Gold 6248"
manufacture date: "2019"
process: 14nm
number of cores: 20
die size: 694 mm¬≤ (XCC configuration)

#+begin_src python :results output :exports both :session
jean_zay = model
jean_zay["server"]["configuration"] = {
    "cpu": {
      "units": 2,
      "model": "Xeon 6248"
    },
    "ram": [
      {
        "units": 1,
        "capacity": 192
      }
    ]
  }
jean_zay["gpu"] = [
  {
    "units": 4,
    "model": "NVIDIA Tesla V100 SXM2 32 GB"
  }
]
#+end_src

#+RESULTS:

*** Hardware for training the models

We are told that training uses only one GPU at a time and that it uses
roughly half of the time a RTX 2080 Ti and the other half a GTX 1080
Ti, to represent this, we will put the two different models in the
list of GPUs and use a 'gpu usage' of .5.
We are also told that the training uses 80 GB memory with no
additional information on the hardware used.
Since we do not know any more precise information, we will use the
default values of our tool to complete the missing pieces of information

    #+begin_src python :results output :exports both :session

training_SLU_model = model
training_SLU_model["gpu"] = [
  {
    "units": 1,
    "model": "NVIDIA GeForce RTX 2080 Ti 11GB"
  },
  {
    "units":1,
    "model": "NVIDIA GeForce GTX 1080 Ti"
  }
]
training_SLU_model["gpu_usage"] = .5
training_SLU_model["server"]["configuration"] = {
    "ram": [
      {
        "units": 1,
        "capacity": 80
      }
    ]
}
    
    #+end_src

    #+RESULTS:

** coherency of the results

One first good news is that information are coherent with themselves.
Using the indicated (in the paper) carbon intensity of 51gCO_2 e/kWh
used and indicated energy consumption, we are able to find back the carbon emissions
indicated in the table. The only problem is that for table 1, it seems
that there was a translation error when filling the table. The figures
are written in the french notation with "," separating units from
decimals and not the usual ".".
For instance, if we look at the first line of table 1, we can read
a consumption of 4,473 kWh, that we can translate to 4.473 kWh.
#+begin_src python :results output :exports both
print(4.473*51)
#+end_src

#+RESULTS:
: 228.123

We obtain 228.123g CO_2 e, the same value as indicated in the paper.

We then only need to be able to find coherent energy consumption
values to obtain comparable results.

** Estimating energy consumption

*** fine tuning of the SSL model

    #+begin_src python :results output :exports both :session
jean_zay["usage"]["hours_use_time"] = 100
jean_zay["usage"]["minute_use_time"] = 0
output = run_experiment(jean_zay, "fine_tuning_SSL")
print_gwp_and_energy(output)
    #+end_src

    #+RESULTS:
    : estimated impacts: {'gwp': {'embodied': 2.0, 'direct': 2.09, 'total': 4.0, 'unit': 'kgCO2eq'}, 'pe': {'embodied': 30.0, 'direct': 463.0, 'total': 500.0, 'unit': 'MJ'}, 'adp': {'embodied': 0.0004, 'direct': 1.99e-06, 'total': 0.0004, 'unit': 'kgSbeq'}, 'energy consumption': {'value': 41.0, 'unit': 'kWh'}}
    : to put impacts in perspective: {'relative_SNBC': {'value': 0.002, 'unit': 'Emissions of X Person per year in the "Strat√©gie Nationale Bas Carbone (SNBC)" sustanability objectives for France'}, 'relative_PB_Climate_Change': {'value': 0.004, 'unit': 'person in a scenario where the Planetary Boundary for Climate Change is not exceded'}, 'relative_PB_ADP': {'value': 0.01, 'unit': 'person in a scenario where the Planetary Boundary for Abiotic Ressources Deplition is not exceded'}}
    : energy consumption: {'value': 41.0, 'unit': 'kWh'}
    : dynamic impacts gwp: {'embodied': 2.0, 'direct': 2.09, 'total': 4.0, 'unit': 'kgCO2eq'}

We can see that we obtain an estimate of 4.85kg CO_2 e for the direct
impacts and a dynamic consumption of 95.2 kWh, which is really
close to the 4.729kg CO_2 e and 97.720 kWh presented in the paper.

*** Table 1

    #+begin_src python :results output :exports both :session
print("spectro 3  steps :")
training_SLU_model['usage']['hours_use_time'] = 36
training_SLU_model['usage']['minute_use_time'] = 14
output = run_experiment(training_SLU_model, 'PortMEDIA_spectro_3-steps')
print_gwp_and_energy(output)

print("spectro 2  steps :")
training_SLU_model['usage']['hours_use_time'] = 24
training_SLU_model['usage']['minute_use_time'] = 14
output = run_experiment(training_SLU_model, 'PortMEDIA_spectro_2-steps')
print_gwp_and_energy(output)

print("spectro 1 step :")
training_SLU_model['usage']['hours_use_time'] = 15
training_SLU_model['usage']['minute_use_time'] = 52
output = run_experiment(training_SLU_model, 'PortMEDIA_spectro_1-step')
print_gwp_and_energy(output)
    #+end_src

    #+RESULTS:
    #+begin_example
    spectro 3  steps :
    estimated impacts: {'gwp': {'embodied': 0.7, 'direct': 0.757, 'total': 1.0, 'unit': 'kgCO2eq'}, 'pe': {'embodied': 9.0, 'direct': 168.0, 'total': 200.0, 'unit': 'MJ'}, 'adp': {'embodied': 0.0001, 'direct': 7.22e-07, 'total': 0.0001, 'unit': 'kgSbeq'}, 'energy consumption': {'value': 14.8, 'unit': 'kWh'}}
    to put impacts in perspective: {'relative_SNBC': {'value': 0.0007, 'unit': 'Emissions of X Person per year in the "Strat√©gie Nationale Bas Carbone (SNBC)" sustanability objectives for France'}, 'relative_PB_Climate_Change': {'value': 0.001, 'unit': 'person in a scenario where the Planetary Boundary for Climate Change is not exceded'}, 'relative_PB_ADP': {'value': 0.004, 'unit': 'person in a scenario where the Planetary Boundary for Abiotic Ressources Deplition is not exceded'}}
    energy consumption: {'value': 14.8, 'unit': 'kWh'}
    dynamic impacts gwp: {'embodied': 0.7, 'direct': 0.757, 'total': 1.0, 'unit': 'kgCO2eq'}
    spectro 2  steps :
    estimated impacts: {'gwp': {'embodied': 0.5, 'direct': 0.506, 'total': 1.0, 'unit': 'kgCO2eq'}, 'pe': {'embodied': 6.0, 'direct': 112.0, 'total': 100.0, 'unit': 'MJ'}, 'adp': {'embodied': 9e-05, 'direct': 4.83e-07, 'total': 9e-05, 'unit': 'kgSbeq'}, 'energy consumption': {'value': 9.93, 'unit': 'kWh'}}
    to put impacts in perspective: {'relative_SNBC': {'value': 0.0005, 'unit': 'Emissions of X Person per year in the "Strat√©gie Nationale Bas Carbone (SNBC)" sustanability objectives for France'}, 'relative_PB_Climate_Change': {'value': 0.001, 'unit': 'person in a scenario where the Planetary Boundary for Climate Change is not exceded'}, 'relative_PB_ADP': {'value': 0.003, 'unit': 'person in a scenario where the Planetary Boundary for Abiotic Ressources Deplition is not exceded'}}
    energy consumption: {'value': 9.93, 'unit': 'kWh'}
    dynamic impacts gwp: {'embodied': 0.5, 'direct': 0.506, 'total': 1.0, 'unit': 'kgCO2eq'}
    spectro 1 step :
    estimated impacts: {'gwp': {'embodied': 0.3, 'direct': 0.332, 'total': 0.6, 'unit': 'kgCO2eq'}, 'pe': {'embodied': 4.0, 'direct': 73.4, 'total': 80.0, 'unit': 'MJ'}, 'adp': {'embodied': 6e-05, 'direct': 3.16e-07, 'total': 6e-05, 'unit': 'kgSbeq'}, 'energy consumption': {'value': 6.5, 'unit': 'kWh'}}
    to put impacts in perspective: {'relative_SNBC': {'value': 0.0003, 'unit': 'Emissions of X Person per year in the "Strat√©gie Nationale Bas Carbone (SNBC)" sustanability objectives for France'}, 'relative_PB_Climate_Change': {'value': 0.0006, 'unit': 'person in a scenario where the Planetary Boundary for Climate Change is not exceded'}, 'relative_PB_ADP': {'value': 0.002, 'unit': 'person in a scenario where the Planetary Boundary for Abiotic Ressources Deplition is not exceded'}}
    energy consumption: {'value': 6.5, 'unit': 'kWh'}
    dynamic impacts gwp: {'embodied': 0.3, 'direct': 0.332, 'total': 0.6, 'unit': 'kgCO2eq'}
    #+end_example
We obtain the following results :
- spectro 3 steps: 14.8kWh, 757g CO_2 e (vs 4.473kWh and 228gCO_2 e in
  the paper)
- spectro 2 steps: 9.93kWh, 506g CO_2 e (vs 2.989kWh and 152gCO_2 e in
  the paper)
- spectro 1 step: 6.5kWh, 322g CO_2 e (vs 1.708kWh and 87gCO_2 e in
  the paper)
We can see that we obtain carbon emission estimates around 4 times higher than
those presented in the paper. It is expected that we obtain higher
estimates than the measurements as presented in [Jay2023experimental]

* replicating results from [Jay2023experimental] 

The hardware used is a Nvidia DGX-1 with two Intel Xeon E5-2698 v4,
512 GB of memory and 8 NVIDIA Teslo V100-SXM2-32GB. 

The Carbon Intensity for France used in Green Algorithms V2.2 is
51.28gCO_2 e/kWh ([[https://github.com/GreenAlgorithms/green-algorithms-tool/blob/master/data/latest/CI_aggregated.csv][latest version of Green Algorithms' Carbon Intensity
Database]])

To convert from kWh to kJ, one must multiply the result by 3.6E+3.

we can see in [[https://github.com/GreenAlgorithms/green-algorithms-tool/blob/master/data/latest/TDP_gpu.csv][the latest version of Green Algorithms' GPU TDP database]]
that they have a TDP value of 300W for an NVIDIA V100 GPU whereas we
have a TDP of 250W for the same card in our database. As a first
version, just to see if we are able to obtain the same exact results
as those presented in the paper, we will use as GPUs a card with a TDP
of 300W in our database: the NVIDIA A100 PCIe 80 GB.

We can also see that the CPU model used is the Xeon E5-2698 v4 with a
tdp 135. However, it isn't available in Green Algorithm, the model
used is the Xeon E5-2697 v4 with a TDP of 145W and 18 cores.
In order to reproduce the results presented in the paper, we will use
in our setup one CPU with 40 cores, a TDP of 324W (145/18*40) and a
die size of 9.12cm¬≤ (2*the die size of a Xeon E5-2698 v4, not relevant
for the computation of energy)

The link explaining the configuration used for the CPU benchmarks are
exact copies of the ones for GPU benchmarks. We will therefore assume
that the cpu usage was 1 and gpu usage was 0. This configuration leads
to an energy consumption of 8.58Wh for one minute. Since this value is
strangely similar to the value of 7.58Wh/min originaly presented in
the paper. We will also assume that there was a mistake when copying
results from the Green Algorithm website and therefore use the value
of 8.58Wh/min instead of the value of 7.58Wh/min to compute the
expected results.

#+begin_src python :results output :exports both :session
with open("boaviztapi/data/ml_setups/Nvidia_DGX-1.json", 'r') as m:
    dgx_1_model = json.load(m)

def get_energy_joules(results):
    energy_kWh = results['impacts']['energy consumption']['value']
    energy_J = 3.6E3*energy_kWh
    return(f"energy consumption: {energy_J:.3f} kJ", energy_J)

# expected results
online_tools = {}

# GPU
online_tools['Green Algorithm GPU'] = {}
online_tools['Green Algorithm GPU']['EP'] = (43.18 * 68 / 60) * 3.6 # converting to joules https://green-algorithms.org//?runTime_hour=0&runTime_min=1&appVersion=v2.2&locationContinent=Europe&locationCountry=France&locationRegion=FR&PUEradio=Yes&PUE=1&coreType=Both&numberCPUs=40&CPUmodel=Xeon%20E5-2697%20v4&usageCPUradio=Yes&usageCPU=0&numberGPUs=8&GPUmodel=NVIDIA%20Tesla%20V100&usageGPUradio=Yes&usageGPU=1&memory=512&platformType=localServer
online_tools['Green Algorithm GPU']['LU'] = (31.18 * 204 / 60) * 3.6 # https://green-algorithms.org//?runTime_hour=0&runTime_min=1&appVersion=v2.2&locationContinent=Europe&locationCountry=France&locationRegion=FR&PUEradio=Yes&PUE=1&coreType=Both&numberCPUs=40&CPUmodel=Xeon%20E5-2697%20v4&usageCPUradio=Yes&usageCPU=0&numberGPUs=8&GPUmodel=NVIDIA%20Tesla%20V100&usageGPUradio=Yes&usageGPU=0.7&memory=512&platformType=localServer
online_tools['Green Algorithm GPU']['MG'] = (14.26 * 157 / 60) * 3.6 # https://green-algorithms.org//?runTime_hour=0&runTime_min=1&appVersion=v2.2&locationContinent=Europe&locationCountry=France&locationRegion=FR&PUEradio=Yes&PUE=1&coreType=Both&numberCPUs=40&CPUmodel=Xeon%20E5-2697%20v4&usageCPUradio=Yes&usageCPU=0.2&numberGPUs=8&GPUmodel=NVIDIA%20Tesla%20V100&usageGPUradio=Yes&usageGPU=0.25&memory=512&platformType=localServer
online_tools['Green Algorithm GPU']['idle'] = (2.29 * 157 / 60) * 3.6 # https://green-algorithms.org//?runTime_hour=0&runTime_min=1&appVersion=v2.2&locationContinent=Europe&locationCountry=France&locationRegion=FR&PUEradio=Yes&PUE=1&coreType=Both&numberCPUs=40&CPUmodel=Xeon%20E5-2697%20v4&usageCPUradio=Yes&usageCPU=0&numberGPUs=8&GPUmodel=NVIDIA%20Tesla%20V100&usageGPUradio=Yes&usageGPU=0&memory=512&platformType=localServer

# CPU
online_tools['Green Algorithm CPU'] = {}
online_tools['Green Algorithm CPU']['EP'] = (8.58 * 50 / 60) * 3.6 # converting to joules https://green-algorithms.org//?runTime_hour=0&runTime_min=1&appVersion=v2.2&locationContinent=Europe&locationCountry=France&locationRegion=FR&PUEradio=Yes&PUE=1&coreType=Both&numberCPUs=40&CPUmodel=Xeon%20E5-2697%20v4&usageCPUradio=Yes&usageCPU=0&numberGPUs=8&GPUmodel=NVIDIA%20Tesla%20V100&usageGPUradio=Yes&usageGPU=1&memory=512&platformType=localServer
online_tools['Green Algorithm CPU']['LU'] = (8.58 * 30 / 60) * 3.6 # https://green-algorithms.org//?runTime_hour=0&runTime_min=1&appVersion=v2.2&locationContinent=Europe&locationCountry=France&locationRegion=FR&PUEradio=Yes&PUE=1&coreType=Both&numberCPUs=40&CPUmodel=Xeon%20E5-2697%20v4&usageCPUradio=Yes&usageCPU=0&numberGPUs=8&GPUmodel=NVIDIA%20Tesla%20V100&usageGPUradio=Yes&usageGPU=0.7&memory=512&platformType=localServer
online_tools['Green Algorithm CPU']['MG'] = (8.58 * 125 / 60) * 3.6 # https://green-algorithms.org//?runTime_hour=0&runTime_min=1&appVersion=v2.2&locationContinent=Europe&locationCountry=France&locationRegion=FR&PUEradio=Yes&PUE=1&coreType=Both&numberCPUs=40&CPUmodel=Xeon%20E5-2697%20v4&usageCPUradio=Yes&usageCPU=0.2&numberGPUs=8&GPUmodel=NVIDIA%20Tesla%20V100&usageGPUradio=Yes&usageGPU=0.25&memory=512&platformType=localServer
online_tools['Green Algorithm CPU']['idle'] = (0 * 60 / 60) * 3.6 

def experiment(model, core_type, benchmark, cpu_usage, gpu_usage, time):
    print(benchmark)
    model['cpu_usage'] = cpu_usage
    model['gpu_usage'] = gpu_usage
    model['usage']['minute_use_time'] = time
    output = run_experiment(dgx_1_model, f'{core_type}_{benchmark}')
    s, r = get_energy_joules(output)
    diff ="{:.3f}".format(r - online_tools['Green Algorithm ' + core_type][benchmark])
    print(s, f"difference from expectation: {diff} kJ")

def experiments(model):
    print('GPU benchmark')

    experiment(model, 'GPU', 'EP', 0, 1, 68/60)
    experiment(model, 'GPU', 'LU', 0, .7, 204/60)
    experiment(model, 'GPU', 'MG', .2, .25, 157/60)

    print('\nCPU benchmark')

    experiment(model, 'CPU', 'EP', 1, 0, 50/60)
    experiment(model, 'CPU', 'LU', 1, 0, 30/60)
    experiment(model, 'CPU', 'MG', 1, 0, 125/60)

print('Replicating the exact results')

experiments(dgx_1_model)

print('\nRunning the experiments with the "correct" setup')

dgx_1_model_correct = dgx_1_model.copy()
dgx_1_model_correct['server']['configuration']['cpu'] = {
    "units": 2,
    "model": "Xeon E5-2698 v4"
}
dgx_1_model_correct['gpu'] = [
  {
      "units": 8,
      "model": "NVIDIA Tesla V100 SXM2 32 GB"
  }
]
experiments(dgx_1_model_correct)



#+end_src

#+RESULTS:
#+begin_example
Replicating the exact results
GPU benchmark
EP
estimated impacts: {'gwp': {'embodied': 0.002, 'direct': 0.0, 'total': 0.002, 'unit': 'kgCO2eq'}, 'pe': {'embodied': 0.03, 'direct': 0.0, 'total': 0.03, 'unit': 'MJ'}, 'adp': {'embodied': 2e-07, 'direct': 0.0, 'total': 2e-07, 'unit': 'kgSbeq'}, 'energy consumption': {'value': 0.0489, 'unit': 'kWh'}}
to put impacts in perspective: {'relative_SNBC': {'value': 1e-06, 'unit': 'Emissions of X Person per year in the "Strat√©gie Nationale Bas Carbone (SNBC)" sustanability objectives for France'}, 'relative_PB_Climate_Change': {'value': 2e-06, 'unit': 'person in a scenario where the Planetary Boundary for Climate Change is not exceded'}, 'relative_PB_ADP': {'value': 5e-06, 'unit': 'person in a scenario where the Planetary Boundary for Abiotic Ressources Deplition is not exceded'}}
energy consumption: 176.040 kJ difference from expectation: -0.134 kJ
LU
estimated impacts: {'gwp': {'embodied': 0.006, 'direct': 0.0, 'total': 0.006, 'unit': 'kgCO2eq'}, 'pe': {'embodied': 0.08, 'direct': 0.0, 'total': 0.08, 'unit': 'MJ'}, 'adp': {'embodied': 5e-07, 'direct': 0.0, 'total': 5e-07, 'unit': 'kgSbeq'}, 'energy consumption': {'value': 0.106, 'unit': 'kWh'}}
to put impacts in perspective: {'relative_SNBC': {'value': 3e-06, 'unit': 'Emissions of X Person per year in the "Strat√©gie Nationale Bas Carbone (SNBC)" sustanability objectives for France'}, 'relative_PB_Climate_Change': {'value': 6e-06, 'unit': 'person in a scenario where the Planetary Boundary for Climate Change is not exceded'}, 'relative_PB_ADP': {'value': 2e-05, 'unit': 'person in a scenario where the Planetary Boundary for Abiotic Ressources Deplition is not exceded'}}
energy consumption: 381.600 kJ difference from expectation: -0.043 kJ
MG
estimated impacts: {'gwp': {'embodied': 0.005, 'direct': 0.0, 'total': 0.005, 'unit': 'kgCO2eq'}, 'pe': {'embodied': 0.06, 'direct': 0.0, 'total': 0.06, 'unit': 'MJ'}, 'adp': {'embodied': 4e-07, 'direct': 0.0, 'total': 4e-07, 'unit': 'kgSbeq'}, 'energy consumption': {'value': 0.0373, 'unit': 'kWh'}}
to put impacts in perspective: {'relative_SNBC': {'value': 2e-06, 'unit': 'Emissions of X Person per year in the "Strat√©gie Nationale Bas Carbone (SNBC)" sustanability objectives for France'}, 'relative_PB_Climate_Change': {'value': 5e-06, 'unit': 'person in a scenario where the Planetary Boundary for Climate Change is not exceded'}, 'relative_PB_ADP': {'value': 1e-05, 'unit': 'person in a scenario where the Planetary Boundary for Abiotic Ressources Deplition is not exceded'}}
energy consumption: 134.280 kJ difference from expectation: -0.049 kJ

CPU benchmark
EP
estimated impacts: {'gwp': {'embodied': 0.001, 'direct': 0.0, 'total': 0.001, 'unit': 'kgCO2eq'}, 'pe': {'embodied': 0.02, 'direct': 0.0, 'total': 0.02, 'unit': 'MJ'}, 'adp': {'embodied': 1e-07, 'direct': 0.0, 'total': 1e-07, 'unit': 'kgSbeq'}, 'energy consumption': {'value': 0.00715, 'unit': 'kWh'}}
to put impacts in perspective: {'relative_SNBC': {'value': 7e-07, 'unit': 'Emissions of X Person per year in the "Strat√©gie Nationale Bas Carbone (SNBC)" sustanability objectives for France'}, 'relative_PB_Climate_Change': {'value': 1e-06, 'unit': 'person in a scenario where the Planetary Boundary for Climate Change is not exceded'}, 'relative_PB_ADP': {'value': 4e-06, 'unit': 'person in a scenario where the Planetary Boundary for Abiotic Ressources Deplition is not exceded'}}
energy consumption: 25.740 kJ difference from expectation: 0.000 kJ
LU
estimated impacts: {'gwp': {'embodied': 0.0009, 'direct': 0.0, 'total': 0.0009, 'unit': 'kgCO2eq'}, 'pe': {'embodied': 0.01, 'direct': 0.0, 'total': 0.01, 'unit': 'MJ'}, 'adp': {'embodied': 7e-08, 'direct': 0.0, 'total': 7e-08, 'unit': 'kgSbeq'}, 'energy consumption': {'value': 0.00429, 'unit': 'kWh'}}
to put impacts in perspective: {'relative_SNBC': {'value': 4e-07, 'unit': 'Emissions of X Person per year in the "Strat√©gie Nationale Bas Carbone (SNBC)" sustanability objectives for France'}, 'relative_PB_Climate_Change': {'value': 9e-07, 'unit': 'person in a scenario where the Planetary Boundary for Climate Change is not exceded'}, 'relative_PB_ADP': {'value': 2e-06, 'unit': 'person in a scenario where the Planetary Boundary for Abiotic Ressources Deplition is not exceded'}}
energy consumption: 15.444 kJ difference from expectation: 0.000 kJ
MG
estimated impacts: {'gwp': {'embodied': 0.004, 'direct': 0.0, 'total': 0.004, 'unit': 'kgCO2eq'}, 'pe': {'embodied': 0.05, 'direct': 0.0, 'total': 0.05, 'unit': 'MJ'}, 'adp': {'embodied': 3e-07, 'direct': 0.0, 'total': 3e-07, 'unit': 'kgSbeq'}, 'energy consumption': {'value': 0.0179, 'unit': 'kWh'}}
to put impacts in perspective: {'relative_SNBC': {'value': 2e-06, 'unit': 'Emissions of X Person per year in the "Strat√©gie Nationale Bas Carbone (SNBC)" sustanability objectives for France'}, 'relative_PB_Climate_Change': {'value': 4e-06, 'unit': 'person in a scenario where the Planetary Boundary for Climate Change is not exceded'}, 'relative_PB_ADP': {'value': 1e-05, 'unit': 'person in a scenario where the Planetary Boundary for Abiotic Ressources Deplition is not exceded'}}
energy consumption: 64.440 kJ difference from expectation: 0.090 kJ

Running the experiments with the "correct" setup
GPU benchmark
EP
estimated impacts: {'gwp': {'embodied': 0.002, 'direct': 0.0, 'total': 0.002, 'unit': 'kgCO2eq'}, 'pe': {'embodied': 0.03, 'direct': 0.0, 'total': 0.03, 'unit': 'MJ'}, 'adp': {'embodied': 2e-07, 'direct': 0.0, 'total': 2e-07, 'unit': 'kgSbeq'}, 'energy consumption': {'value': 0.0087, 'unit': 'kWh'}}
to put impacts in perspective: {'relative_SNBC': {'value': 1e-06, 'unit': 'Emissions of X Person per year in the "Strat√©gie Nationale Bas Carbone (SNBC)" sustanability objectives for France'}, 'relative_PB_Climate_Change': {'value': 2e-06, 'unit': 'person in a scenario where the Planetary Boundary for Climate Change is not exceded'}, 'relative_PB_ADP': {'value': 5e-06, 'unit': 'person in a scenario where the Planetary Boundary for Abiotic Ressources Deplition is not exceded'}}
energy consumption: 31.320 kJ difference from expectation: -144.854 kJ
LU
estimated impacts: {'gwp': {'embodied': 0.006, 'direct': 0.0, 'total': 0.006, 'unit': 'kgCO2eq'}, 'pe': {'embodied': 0.08, 'direct': 0.0, 'total': 0.08, 'unit': 'MJ'}, 'adp': {'embodied': 5e-07, 'direct': 0.0, 'total': 5e-07, 'unit': 'kgSbeq'}, 'energy consumption': {'value': 0.0261, 'unit': 'kWh'}}
to put impacts in perspective: {'relative_SNBC': {'value': 3e-06, 'unit': 'Emissions of X Person per year in the "Strat√©gie Nationale Bas Carbone (SNBC)" sustanability objectives for France'}, 'relative_PB_Climate_Change': {'value': 6e-06, 'unit': 'person in a scenario where the Planetary Boundary for Climate Change is not exceded'}, 'relative_PB_ADP': {'value': 2e-05, 'unit': 'person in a scenario where the Planetary Boundary for Abiotic Ressources Deplition is not exceded'}}
energy consumption: 93.960 kJ difference from expectation: -287.683 kJ
MG
estimated impacts: {'gwp': {'embodied': 0.005, 'direct': 0.0, 'total': 0.005, 'unit': 'kgCO2eq'}, 'pe': {'embodied': 0.06, 'direct': 0.0, 'total': 0.06, 'unit': 'MJ'}, 'adp': {'embodied': 4e-07, 'direct': 0.0, 'total': 4e-07, 'unit': 'kgSbeq'}, 'energy consumption': {'value': 0.0201, 'unit': 'kWh'}}
to put impacts in perspective: {'relative_SNBC': {'value': 2e-06, 'unit': 'Emissions of X Person per year in the "Strat√©gie Nationale Bas Carbone (SNBC)" sustanability objectives for France'}, 'relative_PB_Climate_Change': {'value': 5e-06, 'unit': 'person in a scenario where the Planetary Boundary for Climate Change is not exceded'}, 'relative_PB_ADP': {'value': 1e-05, 'unit': 'person in a scenario where the Planetary Boundary for Abiotic Ressources Deplition is not exceded'}}
energy consumption: 72.360 kJ difference from expectation: -61.969 kJ

CPU benchmark
EP
estimated impacts: {'gwp': {'embodied': 0.001, 'direct': 0.0, 'total': 0.001, 'unit': 'kgCO2eq'}, 'pe': {'embodied': 0.02, 'direct': 0.0, 'total': 0.02, 'unit': 'MJ'}, 'adp': {'embodied': 1e-07, 'direct': 0.0, 'total': 1e-07, 'unit': 'kgSbeq'}, 'energy consumption': {'value': 0.0064, 'unit': 'kWh'}}
to put impacts in perspective: {'relative_SNBC': {'value': 7e-07, 'unit': 'Emissions of X Person per year in the "Strat√©gie Nationale Bas Carbone (SNBC)" sustanability objectives for France'}, 'relative_PB_Climate_Change': {'value': 2e-06, 'unit': 'person in a scenario where the Planetary Boundary for Climate Change is not exceded'}, 'relative_PB_ADP': {'value': 4e-06, 'unit': 'person in a scenario where the Planetary Boundary for Abiotic Ressources Deplition is not exceded'}}
energy consumption: 23.040 kJ difference from expectation: -2.700 kJ
LU
estimated impacts: {'gwp': {'embodied': 0.0009, 'direct': 0.0, 'total': 0.0009, 'unit': 'kgCO2eq'}, 'pe': {'embodied': 0.01, 'direct': 0.0, 'total': 0.01, 'unit': 'MJ'}, 'adp': {'embodied': 8e-08, 'direct': 0.0, 'total': 8e-08, 'unit': 'kgSbeq'}, 'energy consumption': {'value': 0.00384, 'unit': 'kWh'}}
to put impacts in perspective: {'relative_SNBC': {'value': 4e-07, 'unit': 'Emissions of X Person per year in the "Strat√©gie Nationale Bas Carbone (SNBC)" sustanability objectives for France'}, 'relative_PB_Climate_Change': {'value': 9e-07, 'unit': 'person in a scenario where the Planetary Boundary for Climate Change is not exceded'}, 'relative_PB_ADP': {'value': 2e-06, 'unit': 'person in a scenario where the Planetary Boundary for Abiotic Ressources Deplition is not exceded'}}
energy consumption: 13.824 kJ difference from expectation: -1.620 kJ
MG
estimated impacts: {'gwp': {'embodied': 0.004, 'direct': 0.0, 'total': 0.004, 'unit': 'kgCO2eq'}, 'pe': {'embodied': 0.05, 'direct': 0.0, 'total': 0.05, 'unit': 'MJ'}, 'adp': {'embodied': 3e-07, 'direct': 0.0, 'total': 3e-07, 'unit': 'kgSbeq'}, 'energy consumption': {'value': 0.016, 'unit': 'kWh'}}
to put impacts in perspective: {'relative_SNBC': {'value': 2e-06, 'unit': 'Emissions of X Person per year in the "Strat√©gie Nationale Bas Carbone (SNBC)" sustanability objectives for France'}, 'relative_PB_Climate_Change': {'value': 4e-06, 'unit': 'person in a scenario where the Planetary Boundary for Climate Change is not exceded'}, 'relative_PB_ADP': {'value': 1e-05, 'unit': 'person in a scenario where the Planetary Boundary for Abiotic Ressources Deplition is not exceded'}}
energy consumption: 57.600 kJ difference from expectation: -6.750 kJ
#+end_example

we obtain the following results :
When trying to obtain the exact same results (same hardware setup as used for
obtaining values with Green Algorithms)
for the GPU benchmark
| Benchmark | Value (kJ) | Difference (kJ) |
| EP        |    176.040 |          -0.134 |
| LU        |    381.600 |          -0.043 |
| MG        |    134.280 |          -0.049 |
for the CPU benchmarks
| Benchmark | Value (kJ) | Difference (kJ) |
| EP        |     25.740 |           0.000 |
| LU        |     15.444 |           0.000 |
| MG        |     64.440 |           0.090 |


When using the hardware setup really used:
for the GPU benchmark
| Benchmark | Value (kJ) | Difference (kJ) |
| EP        |     31.320 |        -144.854 |
| LU        |     93.960 |        -287.683 |
| MG        |     72.360 |         -61.969 |
for the CPU benchmarks
| Benchmark | Value (kJ) | Difference (kJ) |
| EP        |     23.040 |          -2.700 |
| LU        |     13.824 |          -1.620 |
| MG        |     57.600 |          -6.750 |

We can see that we are able to obtain results that are exactly the
same as the expected ones up to rounding errors (difference 3 orders of magnitude
lesser than the value). We can also see that even though the input
value to Green Algorithms does not exactly correspond to the hardware
setup used, we can also see that the difference to the expected
results isn't high for CPUs (10 times less than the expected value)
and is however pretty significant for the GPU benchmarks.
